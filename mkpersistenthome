#!/bin/bash
# mkpersistenthome - create sidux home directory image
# (C) Klaus Knopper Feb 2003
# (C) 2004-2006 Stefan Lippers-Hollmann <s.l-h@gmx.de>

# override tool behaviour through distro-defaults
FLL_DISTRO_NAME="sidux"
FLL_IMAGE_DIR="KNOPPIX"
FLL_MOUNTPOINT="/KNOPPIX"
[ -r /etc/default/distro ] && source /etc/default/distro

PATH="/bin:/sbin:/usr/bin:/usr/sbin"
export PATH

# update fstab for usb devices connected later
rebuildfstab

XDIALOG_HIGH_DIALOG_COMPAT=1
export XDIALOG_HIGH_DIALOG_COMPAT

# Get root
[ "`id -u`" != "0" ] && exec su-me "$0" "$@"

TMP="$(mktemp -p /tmp/ mkpersistenthome-XXXXXXXXXX)"
TMPDONE="$(mktemp -p /tmp/ mkpersistenthome.done-XXXXXXXXXX)"
TMPERR="$(mktemp -p /tmp/ mkpersistenthome.err-XXXXXXXXXX)"
HWSETUP_MAIN="/etc/sysconfig/knoppix"

DIRECTORY=""

bailout() {
	rm -f	"$TMP" \
		"$TMPDONE" \
		"$TMPERR"
	
	[ -n "$DIRECTORY" ] && umount "$DIRECTORY" 2>/dev/null
	
	exit 0
}

DIALOG="dialog"
[ -n "$DISPLAY" ] && [ -x /usr/bin/Xdialog ] && DIALOG="Xdialog"

trap bailout 1 2 3 15

# LANGUAGE etc.
[ -f "$HWSETUP_MAIN" ] && source "$HWSETUP_MAIN"

HOMEKB="$(du -sk $HOME 2>/dev/null | awk '{print $1}')"

# Language-dependent Messages
case "$LANG" in
	de*|at*|ch*)
		TITLE1="Permanentes \"$FLL_DISTRO_NAME\" Heimverzeichnis anlegen"
		MESSAGE1="Dieses Skript richtet ein permanentes Heimverzeichnis für den User \"$FLL_LIVE_USER\" auf Ihrer Festplatte oder einem Wechselmedium wie Memorystick, Compactflash oder ZIP-Medium ein. Hierdurch ist es möglich, Daten und persönliche Konfigurationen über einen Reboot hinaus zu speichern, sofern sie im persönlichen Heimverzeichnis des Benutzers abgelegt werden. Per Bootoption, z.B. \"home=/dev/sda1\" für die erste Partition einer SCSI-Festplatte oder eines USB-Memorystick, können Sie beim Systemstart das permanente Heimverzeichnis wieder aktivieren. Die Bootoption \"home=scan\" durchsucht automatisch alle Partitionen und erkannten Speichermedien nach einem persistenten \"$FLL_DISTRO_NAME\"-Heimverzeichnis.

Möchten Sie das Heimverzeichnis des Benutzers \"$FLL_LIVE_USER\" permanent speichern?"
		MESSAGE2="Bitte wählen Sie die Partition, auf der Sie das Heimverzeichnis (oder ein Image davon) anlegen möchten."
		MESSAGE3="Möchten Sie die KOMPLETTE Partition verwenden und mit dem Linux-Dateisystem formatieren?
		NEIN=Image-Datei auf bestehendem Dateisystem anlegen."
		E1="Persönliche Einstellungen (Desktop, Programme)"
		E2="Netzwerk Einstellungen (LAN, Modem, ISDN, ASDL)"
		E3="Grafik Subsystem Einstellungen (xorg.conf)"
		E4="Weitere systemweite Einstellungen (Drucker etc.)"
		E5="Alle Desktop-Dateien (${DESKTOPKB}kB)"
		SUCCESS="FERTIG!

Die \"$FLL_DISTRO_NAME\"-Konfiguration wurde erfolgreich gespeichert. Ihre Konfigurationsdateien werden beim nächsten \"$FLL_DISTRO_NAME\"-Bootvorgang in die Ramdisk restauriert, wenn Sie im Bootscreen \"$FLL_LIVE_USER floppyconfig\" (Diskette) bzw. \"$FLL_LIVE_USER myconfig=/media/verzeichnisname\" angeben."
		ERROR="Leider konnte die \"$FLL_DISTRO_NAME\"-Konfiguration NICHT gespeichert werden:"
		MESSAGE_NO_PARTS="Keine passende Partition gefunden. Zur Erinnerung: NTFS-Partitonen können mit Linux nicht beschrieben werden."
		;;
	*)
		TITLE1="Create persistent \"$FLL_DISTRO_NAME\" home directory"
		MESSAGE1="This script creates a persistent home directory for the \"$FLL_LIVE_USER\" account on your harddisk or on a changeable medium like memory stick, compact flash or zip media. Using this features makes it possible to store personal data and config files permanently over a reboot, if they are stored inside the home directory of the \"$FLL_LIVE_USER\" user. The boot option \"home=/dev/sda1\", for the first partition of a SCSI harddisk or USB memory stick as example, activates the persistent home directory at system startup. You can also let \"$FLL_DISTRO_NAME\" scan all autodetected storage devices using the boot option \"home=scan\".

Do you want to create a persistent home directory for the \"$FLL_LIVE_USER\" user?"
		MESSAGE2="Please select partition for creating persistent homedir (or image):"
		MESSAGE3="Do you want to use the ENTIRE Partition, and would like to format it with the Linux filesystem?
		NO=Just create an image in the existing filesystem."
		E1="Personal configuration (desktop, programs)"
		E2="Network settings (LAN, Modem, ISDN, ADSL)"
		E3="Graphics subsystem settings (xorg.conf)"
		E4="Other system configuration (printer etc.)"
		E5="All files on the Desktop (${DESKTOPKB}kB)"
		SUCCESS="SUCCESS!

Creation of \"$FLL_DISTRO_NAME\" configuration floppy was successful. Your configuration files will be reinstalled to the ramdisk on next \"$FLL_DISTRO_NAME\" boot if you specify \"$FLL_LIVE_USER floppyconf\" (floppy disk), or \"$FLL_LIVE_USER myconfig=/media/directoryname\" at the boot prompt."
		ERROR="The \"$FLL_DISTRO_NAME\" configuration could NOT be saved:"
		MESSAGE_NO_PARTS="No suitable partitions could be found. Remember that NTFS-Partitions are not writable with linux."
		;;
esac

$DIALOG --cr-wrap --clear --title "$TITLE1" --yesno "$MESSAGE1" 18 75 || bailout

# Partition selector
PARTITIONS=""
count=0
for i in `awk '/^\/dev\/[hs]d[a-z].*\/media\/[hs]d[a-z]/{if(!/ntfs/){print $1}}' /etc/fstab`; do
	PARTITIONS="$PARTITIONS ${i} [Disk/Partition] off"
done
[ -z "$PARTITIONS" ] && { $DIALOG --cr-wrap --clear --title "$TITLE1" --msgbox "$ERROR $MESSAGE_NO_PARTS" 10 75; bailout; }

DIRECTORY=""
PARTITION=""
while [ -z "$PARTITION" -o -z "$DIRECTORY" -o ! -e "$DIRECTORY" ]; do
	rm -f "$TMP"
	$DIALOG --cr-wrap --clear --title "$TITLE1" --radiolist "$MESSAGE2" 18 75 9 $PARTITIONS 2>"$TMP" || bailout
	PARTITION="$(<$TMP)"
	DIRECTORY="/media/${PARTITION##/dev/}"
done

DEVICE=""
if $DIALOG --cr-wrap --clear --title "$TITLE1" --defaultno --yesno "$MESSAGE3" 15 75; then
	DEVICE="$PARTITION"
else
	DEVICE="$DIRECTORY/$FLL_PERSISTENT_HOME"
	mount | grep -q "$DIRECTORY" || mount -r "$DIRECTORY" 2>"$TMPERR"
	[ "$?" != "0" ] && { $DIALOG --cr-wrap --title "$TITLE1" --msgbox "$ERROR `cat $TMPERR`" 10 75; bailout; }
	mount | grep -q "$DIRECTORY.*ntfs" && { $DIALOG --cr-wrap --title "$TITLE1" --msgbox "$ERROR NTFS" 10 75; bailout; }
	mount -o remount,rw "$DIRECTORY"
fi


# More language-dependent Messages
case "$LANG" in
	de*|at*|ch*)
		MESSAGE4="Sind Sie ABSOLUT SICHER, dass Sie die Partition $PARTITION formatieren möchten? ALLE DATEN WERDEN DADURCH GELÖSCHT!"
		MESSAGE5="Möchten Sie Ihr Heimverzeichnis mit AES256 (=Advanced Encryption Standard 256bit, s.a. http://csrc.nist.gov/encryption/aes/) verschlüsselt speichern? Hierzu ist die Eingabe eines sehr langen Passwortes beim Einrichten sowie beim Einbinden des Verzeichnisses beim Systemstart erforderlich. NEIN=unverschlüsselt"
		MESSAGE6="Bitte geben Sie die gewünschte Größe Ihres persistenten Heimverzeichnisses in MB an (aktuell belegt: $HOMEKB Kilobyte, verfügbar:"
		MESSAGE7="Formatiere $DEVICE mit dem ext2 Dateisystem und kopiere Daten..."
		MESSAGE8="Lege Datenbereich für Linux an..."
		SUCCESS="$DEVICE wurde erfolgreich mit dem Linux ext2 Dateisystem formatiert, und Ihre Heimverzeichnis-Daten wurden darauf transferiert.

Sie können jetzt Ihren Computer neu starten, und beim \"$FLL_DISTRO_NAME\" boot:-Prompt durch Eingabe von \"$FLL_LIVE_USER home=$PARTITION\" oder \"$FLL_LIVE_USER home=scan\" Ihr permanentes Heimverzeichnis aktivieren. Falls Sie außerdem (mit dem saveconfig Skript) die Systemeinstellungen gesichert haben, können Sie diese Option mit der Angabe von \"myconf=$PARTITION\" oder \"myconf=scan\" kombinieren."
		;;
	*)
		MESSAGE4="Are you positively SURE that you want to format partition $PARTITION? ALL DATA WILL BE LOST!"
		MESSAGE5="Do you want to save your home directory encrypted with AES256 (Advanced Encryption Standard, see http://csrc.nist.gov/encryption/aes/)? If yes, you will have to specify a very long password at homedir creation and boot time."
		MESSAGE6="Please enter the desired size of your persistent homedir in MB (currently used: $HOMEKB kB, available:"
		MESSAGE7="Formatting $DEVICE with ext2 filesystem and copying data..."
		MESSAGE8="Preparing for Linux filesystem..."
		SUCCESS="$DEVICE has been succeessfully formatted with the Linux ext2 filesystem, and your home directory has been transferred to it.

You may now reboot your computer and type \"$FLL_LIVE_USER home=$PARTITION\" or \"$FLL_LIVE_USER home=scan\" at the \"$FLL_DISTRO_NAME\" boot: prompt to take advantage of your new persistent home directory. If you have also saved the system configuration (using the saveconfig script), you can use this in combination with \"myconf=$PARTITION\" or \"myconf=scan\"."
		;;
esac

gauge() {
	rm -f "$TMPDONE"
	status=0
	while [ ! -e "$TMPDONE" ]; do echo "$status" ; status="`expr \( 100 - $status \) / 4 + $status`"; sleep 2; done | $DIALOG --title "$TITLE1" --gauge "$1" 8 75 0
}

# Stop status bar
killgauge() {
	touch "$TMPDONE"
	wait
	rm -f "$TMPDONE"
}

if [ "$DEVICE" = "$PARTITION" ]; then
	"$DIALOG" --cr-wrap --clear --title "$TITLE1" --defaultno --yesno "$MESSAGE4" 6 75 || bailout
else
	AMOUNT=0
	AVAIL="$(df -m $DIRECTORY/. | awk '/^\/dev\//{print $4}')"
	until [ "$AMOUNT" -ge 1 -a "$AMOUNT" -le "$AVAIL" ] 2>/dev/null; do
		"$DIALOG" --cr-wrap --clear --title "$TITLE1" --inputbox "$MESSAGE6 $AVAIL MB)" 10 62 "30" 2>"$TMP" || bailout
		AMOUNT="$(<$TMP)"
	done
	gauge "$MESSAGE8" &
	dd if=/dev/urandom of="$DEVICE" bs=1M count="$AMOUNT" || { killgauge; sleep 2; bailout; }
	killgauge
fi

ENCRYPTION=""
"$DIALOG" --cr-wrap --clear --title "$TITLE1" --defaultno --yesno "$MESSAGE5" 9 75 && ENCRYPTION="AES256"

findfreeloop() {
	i=0
	for i in 0 1 2 3 4 5 6 7; do
		LOOP="/dev/loop$i"
		losetup "$LOOP" >/dev/null 2>&1 || { echo "$LOOP"; return 0; }
	done

	return 1
}

getpassword() {
	case "$LANG" in
		de*|at*|ch*)
			HEADER="AES256 Verschlüsselungs-Passwort (Minimum 20 Zeichen!)"
			ENTER="Eingabe:"
			AGAIN="Noch einmal, um sicherzugehen:"
			;;
		*)
			HEADER="AES256 encryption password (minimum 20 characters!)"
			ENTER="Enter:"
			AGAIN="Again, just to be sure:"
			;;
	esac
	
	PASS1=""
	PASS2=""
	until [ -n "$PASS1" -a "$PASS1" = "$PASS2" ]; do
		rm -f "$TMP.pass"
		if [ "$DIALOG" = "Xdialog" ]; then
			Xdialog --title "$TITLE1" --password --password --2inputsbox "$HEADER" 15 60 "$ENTER" "" "$AGAIN" "" 2>"$TMP.pass" || bailout
			PASSWORDS="$(<$TMP.pass)"
			PASS1="${PASSWORDS%%/*}"
			PASS2="${PASSWORDS##*/}"
		else
			dialog --title "$HEADER" --passwordbox "$ENTER" 8 65 "" 2>"$TMP.pass" || bailout
			PASS1="$(<$TMP.pass)"
			dialog --title "$HEADER" --passwordbox "$AGAIN" 8 65 "" 2>"$TMP.pass" || bailout
			PASS2="$(<$TMP.pass)"
		fi
	done
	
	rm -f "$TMP.pass"
	echo "$PASS1" >&2
}

LOOPDEV="$(findfreeloop)"
FORMAT=""
if [ -n "$ENCRYPTION" -a -n "$LOOPDEV" ]; then
	getpassword 2>"$TMP"
	PASSWORD="$(<$TMP)"
	rm -f "$TMP"
	losetup -p0 -e "$ENCRYPTION" "$LOOPDEV" "$DEVICE" 2>"$TMPERR" <<EOT
$PASSWORD
EOT

	if [ "$?" != "0" ]; then
		$DIALOG --cr-wrap --title "$TITLE1" --msgbox "$ERROR `cat $TMPERR`" 10 75
		bailout
	fi

	# Start progress display
	gauge "$MESSAGE7" &
	mke2fs -m0 "$LOOPDEV" 2>"$TMPERR" || { killgauge; $DIALOG --cr-wrap --title "$TITLE1" --msgbox "$ERROR `cat $TMPERR`" 10 75; bailout; }
	mkdir -p /tmp/knxhome
	mount -t ext2 "$LOOPDEV" /tmp/knxhome 2>"$TMPERR" && rsync -Ha "$HOME/" /tmp/knxhome 2>"$TMPERR" || { killgauge; $DIALOG --cr-wrap --title "$TITLE1" --msgbox "$ERROR `cat $TMPERR`" 10 75; bailout; }
	umount -l /tmp/knxhome
	losetup -d "$LOOPDEV"
	umount "$DIRECTORY" 2>/dev/null
	killgauge
else
	# Normal loopback file or partition
	gauge "$MESSAGE7" &
	# Just to make sure...
	umount "$DEVICE" 2>/dev/null
	mke2fs -F -m0 "$DEVICE" 2>"$TMPERR" || { killgauge; $DIALOG --cr-wrap --title "$TITLE1" --msgbox "$ERROR `cat $TMPERR`" 10 75; bailout; }
	LOOPOPT=""
	[ -f "$DEVICE" ] && LOOPOPT="-o loop"
	mkdir -p /tmp/knxhome
	mount -t ext2 $LOOPOPT "$DEVICE" /tmp/knxhome 2>"$TMPERR" && rsync -Ha "$HOME/" /tmp/knxhome 2>"$TMPERR" || { killgauge; umount /tmp/knxhome 2>/dev/null; $DIALOG --cr-wrap --title "$TITLE1" --msgbox "$ERROR `cat $TMPERR`" 10 75; bailout; }
	umount /tmp/knxhome
	umount "$DIRECTORY" 2>/dev/null
	killgauge
fi

"$DIALOG" --cr-wrap --title "$TITLE1" --msgbox "$SUCCESS" 17 65

bailout
